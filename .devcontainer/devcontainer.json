{
	"name": "Fortesza Development",
	// Sets the run context to one level up instead of the .devcontainer folder.
	//"context": "../",
	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	//"dockerFile": "Dockerfile",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": null
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"felixfbecker.php-debug",
		"felixfbecker.php-intellisense",
		"mtxr.sqltools",
		"mtxr.sqltools-driver-mysql"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		9000,
		4306,
		22
	],
	"dockerComposeFile": [
		"../docker-compose.devcontainer.yml"
	],

	"runServices": ["app", "nginx", "db-server", "fortesza_app_redis"],
		
	"service": "app",

	"workspaceFolder": "/workspace",

	//"network_mode": "service:db"
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",
	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}